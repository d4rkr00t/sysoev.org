{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Post","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","gatsby_plugin_mdx__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","mdx","data","createElement","className","title","frontmatter","description","desc","to","date","category","body","href","encodeURIComponent","fields","slug","editUrl","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","components","children","props","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","End","useMemo","fullScope","_objectSpread","keys","values","map","key","_construct","_toConsumableArray","fn"],"mappings":"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","file":"component---src-templates-blog-post-js-45df02dd9eb7d067a1ea.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport SEO from \"../components/seo\";\n\nexport default function Post({ data: { mdx } }) {\n  return (\n    <article className=\"blog-post\">\n      <SEO title={mdx.frontmatter.title} description={mdx.frontmatter.desc} />\n      <div className=\"blog-post__top-nav\">\n        <Link to=\"/\">‚Üê Back to home</Link>\n      </div>\n\n      <header>\n        <h1>{mdx.frontmatter.title}</h1>\n\n        <div className=\"blog-post__meta\">\n          <span className=\"blog-post__meta-item\">{mdx.frontmatter.date}</span>\n          <span className=\"blog-post__meta-item\">\n            {mdx.frontmatter.category}\n          </span>\n        </div>\n      </header>\n\n      <div className=\"blog-post__body\">\n        <MDXRenderer>{mdx.body}</MDXRenderer>\n      </div>\n\n      <footer className=\"blog-post__footer\">\n        <div className=\"blog-post__footer-links\">\n          <a\n            href={`https://mobile.twitter.com/search?q=${encodeURIComponent(\n              `https://sysoev.org/${mdx.fields.slug}`\n            )}`}\n          >\n            Discuss on Twitter\n          </a>\n          <a href={mdx.fields.editUrl}>Edit on GitHub</a>\n        </div>\n      </footer>\n    </article>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    mdx(fields: { id: { eq: $id } }) {\n      frontmatter {\n        title\n        desc\n        date(formatString: \"MMMM DD, YYYY\")\n        category\n      }\n      body\n      fields {\n        editUrl\n        slug\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(\"./mdx-renderer\");\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer\n};\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  // Memoize the compiled component\n  const End = React.useMemo(\n    () => {\n      if (!children) {\n        return null;\n      }\n\n      const fullScope = {\n        // React is here just in case the user doesn't pass them in\n        // in a manual usage of the renderer\n        React,\n        mdx,\n        ...mdxScope\n      };\n\n      const keys = Object.keys(fullScope);\n      const values = keys.map(key => fullScope[key]);\n      const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n      return fn({}, ...values);\n    },\n    [children, scope]\n  );\n\n  return (\n    React.createElement(End, { components: mdxComponents, ...props })\n  );\n};\n"],"sourceRoot":""}