{"version":3,"sources":["webpack:///./src/components/blog-feed.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["BlogFeed","_ref","data","length","compat_module","createElement","className","map","item","blog_feed_BlogFeedItem","key","node","id","BlogFeedItem","_ref2","gatsby_browser_entry","to","fields","slug","frontmatter","title","category","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","allMdx","seo","href","blog_feed_BlogFeed","edges","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"6HAGaA,EAAW,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACzB,OAAKA,GAASA,EAAKC,OAKjBC,EAAA,QAAAC,cAAA,OAAKC,UAAU,aACbF,EAAA,QAAAC,cAAA,MAAIC,UAAU,oBAAd,UACAF,EAAA,QAAAC,cAAA,UACGH,EAAKK,IAAI,SAAAC,GAAI,OACZJ,EAAA,QAAAC,cAACI,EAAD,CAAcC,IAAKF,EAAKG,KAAKC,GAAID,KAAMH,EAAKG,WAR3C,MAeEE,EAAe,SAAAC,GAAc,IAAXH,EAAWG,EAAXH,KAC7B,OACEP,EAAA,QAAAC,cAAA,UACED,EAAA,QAAAC,cAAA,OAAKC,UAAU,mBACbF,EAAA,QAAAC,cAACU,EAAA,EAAD,CAAMC,GAAI,IAAML,EAAKM,OAAOC,MAAOP,EAAKQ,YAAYC,QAEtDhB,EAAA,QAAAC,cAAA,QAAMC,UAAU,4BACbK,EAAKQ,YAAYE,YC3B1BC,EAAAC,EAAAC,EAAA,8BAAAC,IA0CeC,UArCG,SAAAzB,GAAA,IAAW0B,EAAX1B,EAAGC,KAAQyB,OAAX,OAChBvB,EAAA,QAAAC,cAAA,OAAKC,UAAU,uBACbF,EAAA,QAAAC,cAACuB,EAAA,EAAD,CAAKR,MAAM,8BACXhB,EAAA,QAAAC,cAAA,OAAKC,UAAU,aACbF,EAAA,QAAAC,cAAA,MAAIC,UAAU,oBACZF,EAAA,QAAAC,cAAA,sBADF,YAGAD,EAAA,QAAAC,cAAA,OAAKC,UAAU,mBACbF,EAAA,QAAAC,cAAA,iCADF,yGAIED,EAAA,QAAAC,cAAA,KAAGwB,KAAK,yBAAR,aAJF,KAMAzB,EAAA,QAAAC,cAAA,MAAIC,UAAU,uBACZF,EAAA,QAAAC,cAAA,MAAIC,UAAU,2BACZF,EAAA,QAAAC,cAAA,KAAGwB,KAAK,6BAAR,UAEFzB,EAAA,QAAAC,cAAA,MAAIC,UAAU,2BACZF,EAAA,QAAAC,cAAA,KAAGwB,KAAK,0DAAR,WAIFzB,EAAA,QAAAC,cAAA,MAAIC,UAAU,2BACZF,EAAA,QAAAC,cAAA,KAAGwB,KAAK,+BAAR,WAEFzB,EAAA,QAAAC,cAAA,MAAIC,UAAU,2BACZF,EAAA,QAAAC,cAAA,KAAGwB,KAAK,gCAAR,YAEFzB,EAAA,QAAAC,cAAA,MAAIC,UAAU,2BACZF,EAAA,QAAAC,cAAA,KAAGwB,KAAK,wCAAR,YAINzB,EAAA,QAAAC,cAACyB,EAAD,CAAU5B,KAAMyB,EAAOI,UAjC3B,IAuCaN,EAAS,qFChCtB,SAASO,EAAT/B,GAAiD,IAAlCgC,EAAkChC,EAAlCgC,YAAaC,EAAqBjC,EAArBiC,KAAMC,EAAelC,EAAfkC,KAAMf,EAASnB,EAATmB,MAC9BgB,EADuCC,EAAAnC,KACvCkC,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAA,QAAAnC,cAACoC,EAAAC,EAAD,CACEC,eAAgB,CACdT,QAEFd,MAAOA,EACPwB,cAAa,QAAUR,EAAKG,aAAanB,MACzCe,KAAM,CACJ,CACEU,KAAI,cACJC,QAASR,GAEX,CACES,SAAQ,WACRD,QAAS1B,GAEX,CACE2B,SAAQ,iBACRD,QAASR,GAEX,CACES,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKG,aAAaS,QAE7B,CACEH,KAAI,gBACJC,QAAS1B,GAEX,CACEyB,KAAI,sBACJC,QAASR,IAEXW,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-index-js-8d0b85db3b90fe96701d.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport const BlogFeed = ({ data }) => {\n  if (!data || !data.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"blog-feed\">\n      <h2 className=\"blog-feed__title\">Blogs:</h2>\n      <ul>\n        {data.map(item => (\n          <BlogFeedItem key={item.node.id} node={item.node} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport const BlogFeedItem = ({ node }) => {\n  return (\n    <li>\n      <div className=\"blog-feed__item\">\n        <Link to={\"/\" + node.fields.slug}>{node.frontmatter.title}</Link>\n      </div>\n      <span className=\"blog-feed__item-category\">\n        {node.frontmatter.category}\n      </span>\n    </li>\n  );\n};\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport SEO from \"../components/seo\";\nimport { BlogFeed } from \"../components/blog-feed\";\n\nconst IndexPage = ({ data: { allMdx } }) => (\n  <div className=\"main-info-container\">\n    <SEO title=\"Personal Website and Blog\" />\n    <div className=\"main-info\">\n      <h1 className=\"main-info__title\">\n        <b>Stanislav</b> Sysoev.\n      </h1>\n      <div className=\"main-info__text\">\n        <b>Front-End&nbsp;developer.</b> Passioned about JavaScript, NodeJS,\n        Functional Programming and Developer&nbsp;Tools.\n        Currently&nbsp;working&nbsp;at&nbsp;\n        <a href=\"https://atlassian.com\">Atlassian</a>.\n      </div>\n      <ul className=\"main-info__contacts\">\n        <li className=\"main-info__contact-item\">\n          <a href=\"mailto:d4rkr00t@gmail.com\">Email</a>\n        </li>\n        <li className=\"main-info__contact-item\">\n          <a href=\"https://www.linkedin.com/in/stanislav-sysoev-15546236/\">\n            Resume\n          </a>\n        </li>\n        <li className=\"main-info__contact-item\">\n          <a href=\"https://github.com/d4rkr00t\">GitHub</a>\n        </li>\n        <li className=\"main-info__contact-item\">\n          <a href=\"https://twitter.com/d4rkr00t\">Twitter</a>\n        </li>\n        <li className=\"main-info__contact-item\">\n          <a href=\"https://soundcloud.com/s7at1c/tracks\">Music</a>\n        </li>\n      </ul>\n    </div>\n    <BlogFeed data={allMdx.edges} />\n  </div>\n);\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            category\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}