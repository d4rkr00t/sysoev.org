{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Post","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","gatsby_plugin_mdx__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","mdx","data","createElement","className","title","frontmatter","description","desc","to","date","category","body","href","encodeURIComponent","fields","slug","editUrl","m","module","exports","require","default","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","n","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","_objectSpread","json","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","MDXRenderer","useMDXComponents","useMDXScope","scope","components","children","props","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","End","useMemo","fullScope","keys","values","map","key","_construct","_toConsumableArray","fn"],"mappings":"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","file":"component---src-templates-blog-post-js-0e1aabc35a334b0c30a3.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport SEO from \"../components/seo\";\n\nexport default function Post({ data: { mdx } }) {\n  return (\n    <article className=\"blog-post\">\n      <SEO title={mdx.frontmatter.title} description={mdx.frontmatter.desc} />\n      <div className=\"blog-post__top-nav\">\n        <Link to=\"/\">‚Üê Back to home</Link>\n      </div>\n\n      <header>\n        <h1>{mdx.frontmatter.title}</h1>\n\n        <div className=\"blog-post__meta\">\n          <span className=\"blog-post__meta-item\">{mdx.frontmatter.date}</span>\n          <span className=\"blog-post__meta-item\">\n            {mdx.frontmatter.category}\n          </span>\n        </div>\n      </header>\n\n      <div className=\"blog-post__body\">\n        <MDXRenderer>{mdx.body}</MDXRenderer>\n      </div>\n\n      <footer className=\"blog-post__footer\">\n        <div className=\"blog-post__footer-links\">\n          <a\n            href={`https://mobile.twitter.com/search?q=${encodeURIComponent(\n              `https://sysoev.org/${mdx.fields.slug}`\n            )}`}\n          >\n            Discuss on Twitter\n          </a>\n          <a href={mdx.fields.editUrl}>Edit on GitHub</a>\n        </div>\n      </footer>\n    </article>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    mdx(fields: { id: { eq: $id } }) {\n      frontmatter {\n        title\n        desc\n        date(formatString: \"MMMM DD, YYYY\")\n        category\n      }\n      body\n      fields {\n        editUrl\n        slug\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(\"./mdx-renderer\");\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer\n};\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  // Memoize the compiled component\n  const End = React.useMemo(\n    () => {\n      if (!children) {\n        return null;\n      }\n\n      const fullScope = {\n        // React is here just in case the user doesn't pass them in\n        // in a manual usage of the renderer\n        React,\n        mdx,\n        ...mdxScope\n      };\n\n      const keys = Object.keys(fullScope);\n      const values = keys.map(key => fullScope[key]);\n      const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n      return fn({}, ...values);\n    },\n    [children, scope]\n  );\n\n  return (\n    React.createElement(End, { components: mdxComponents, ...props })\n  );\n};\n"],"sourceRoot":""}