{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/intro-and-prerequisites-–-a&ds","webpackCompilationHash":"10a437b15513059d5027","result":{"data":{"mdx":{"frontmatter":{"title":"Intro and Prerequisites – A&DS","desc":"TODO desc","date":"August 20, 2019","category":"Algorithms and Data Structures Series"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Intro and Prerequisites – A&DS\",\n  \"desc\": \"TODO desc\",\n  \"date\": \"2019-08-20T00:00:00.000Z\",\n  \"category\": \"Algorithms and Data Structures Series\",\n  \"tags\": [\"A&DS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(GLink, {\n    to: \"/blog/plan-for-algorithms-and-data-structures-series\",\n    mdxType: \"GLink\"\n  }, \"Plan of the series.\")), mdx(\"p\", null, \"In this series, I'll be covering most common algorithms and data structures with the main goal of improving my own knowledge around these topics.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Disclaimer: I'm learning myself, so if you see any silly mistake, hit me up and I'll most definitely fix it!\")), mdx(\"p\", null, \"I'm a Frontend developer, and my day-to-day doesn't often include working with advanced algorithms and data structures (e.g. graphs, heaps, etc...). And as we all know, knowledge becomes rusty if we don't use it. I want to fix it for myself and I'd be glad if you'd followed along and maybe learned something for yourself.\"), mdx(\"p\", null, \"Another important thing is that I'm trying to make it as relevant to frontend developers as possible. Which include examples from frameworks, browsers, etc... And their application in frontend if possible.\"), mdx(\"p\", null, \"Ok, let's get started, but first, we need sort some things out. We will be constantly referring to algorithmic complexity and it would be nice to brush up on it before reading other posts from the series, good short videos to get you started:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=iOq5kSKqeR4\"\n  }), \"Asymptotic Notation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=V6mKVRU1evU\"\n  }), \"Big O Notations\"))), mdx(\"p\", null, \"And more in-depth mathematical explanation:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=ei-A_wy5Yxw\"\n  }), \"Big Oh Notation (and Omega and Theta)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"editUrl":"https://github.com/d4rkr00t/sysoev.org/edit/master/blog/algorithms-and-data-structures/intro/index.mdx","slug":"blog/intro-and-prerequisites-–-a&ds"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"90222d5e-6ffb-5aa8-9435-89279669dfa5"}}}